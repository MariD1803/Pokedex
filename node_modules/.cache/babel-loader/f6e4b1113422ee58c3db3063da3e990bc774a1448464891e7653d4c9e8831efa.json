{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["/home/mariangel/Documents/project/prueba/src/components/CardCustom.vue"],"sourcesContent":["<template>\n  \n</template>\n\n<script>\nexport default {\n  name: 'CardCustom',\n  props: {        \n    pokemon: {\n      type: Object,\n      required: true\n    }   \n  },\n  data() {\n    return {\n      displayAlert: false,\n      info: [\n        { 'data': this.transformTextToUppercase(this.pokemon.name), 'label': 'Name'},\n        { 'data': this.calculateSize(this.pokemon.weight), 'label': 'Weight'},\n        { 'data': this.calculateSize(this.pokemon.height), 'label': 'Height'},\n        { 'data': this.pokemon.types.map((e) => this.transformTextToUppercase(e.type.name)).join(', '), 'label': 'Types'}\n      ]\n    }\n  },\n  methods: {\n    transformTextToUppercase(element) {\n      return element.charAt(0).toUpperCase() + element.slice(1);\n    },\n    calculateSize(e) {\n      let value = e / 10;\n      return value;\n    },\n    copyInfo() {\n      let textToCopy = this.info.map(element => `${element.label}: ${element.data}`).join(', ');\n      navigator.clipboard.writeText(textToCopy)\n        .then(() => {\n          this.displayAlert = true;\n          setTimeout(() => { \n            this.displayAlert = false\n          }, 1000); // Nota: 1000 es en milisegundos\n        })\n        .catch(err => {\n          console.log('Error copying to Clipboard', err);\n        });\n    }\n  }\n}\n</script>\n\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}