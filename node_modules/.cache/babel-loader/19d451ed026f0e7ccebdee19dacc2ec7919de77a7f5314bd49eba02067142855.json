{"ast":null,"code":"export default {\n  name: 'Card',\n  props: {\n    pokemon: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      displayAlert: false,\n      info: [{\n        'data': this.transformTextToUppercase(this.pokemon.name),\n        'label': 'Name'\n      }, {\n        'data': this.calculateSize(this.pokemon.weight),\n        'label': 'Weight'\n      }, {\n        'data': this.calculateSize(this.pokemon.height),\n        'label': 'Height'\n      }, {\n        'data': this.pokemon.types.map(e => this.transformTextToUppercase(e.type.name)).join(', '),\n        'label': 'Types'\n      }]\n    };\n  },\n  methods: {\n    transformTextToUppercase(element) {\n      return element.charAt(0).toUpperCase() + element.slice(1);\n    },\n    calculateSize(e) {\n      let value = e / 10;\n      return value;\n    },\n    copyInfo() {\n      let textToCopy = this.info.map(element => `${element.label}: ${element.data}`).join(', ');\n      navigator.clipboard.writeText(textToCopy).then(() => {\n        this.displayAlert = true;\n        setTimeout(() => {\n          this.displayAlert = false;\n        }, \"1000\");\n      }).catch(err => {\n        console.log('Error copying to Clipboard', err);\n      });\n    }\n  },\n  template: `\n        <div>\n            <i class=\"fa-solid fa-circle-xmark close\" @click=\"$emit('update:modal', false)\"></i>\n            <div class=\"container-header\">          \n                <img :src=\"pokemon.sprites.other.dream_world.front_default\" alt=\"img_pokemon\" class=\"img\">\n            </div>\n\n            <div class=\"container-info\">\n                <div v-for=\"element in info\" class=\"info-element\">\n                    <h3>{{element.label}}:</h3>\n                    <p>{{element.data}}</p>\n                </div >\n            </div>\n\n            <div class=\"footer\">\n                <button-custom :content=\"'Share to my friends'\" @click=\"copyInfo()\"></button-custom>\n                <div class=\"container-star\">\n                    <slot></slot>\n                </div>\n            </div>\n\n            <div class=\"copy-alert\" :class=\"{'animation': displayAlert, 'hidden': !displayAlert}\">\n                <i class=\"fa-regular fa-copy\"></i>\n                <p>Copied to Clipboard!</p>\n            </div>\n        \n        </div>\n    `\n};","map":{"version":3,"names":["name","props","pokemon","type","Object","required","data","displayAlert","info","transformTextToUppercase","calculateSize","weight","height","types","map","e","join","methods","element","charAt","toUpperCase","slice","value","copyInfo","textToCopy","label","navigator","clipboard","writeText","then","setTimeout","catch","err","console","log","template"],"sources":["/home/mariangel/Documents/project/prueba/src/components/card.js"],"sourcesContent":["export default {\n    name: 'Card',\n    props: {        \n        pokemon: {\n          type: Object,\n          required: true\n        }   \n    },\n    data() {\n        return {\n            displayAlert: false,\n            info: [{ 'data': this.transformTextToUppercase(this.pokemon.name), 'label': 'Name'}, { 'data': this.calculateSize(this.pokemon.weight), 'label': 'Weight'}, { 'data': this.calculateSize(this.pokemon.height), 'label': 'Height'}, { 'data': this.pokemon.types.map((e) => this.transformTextToUppercase(e.type.name)).join(', '), 'label': 'Types'} ]\n        }\n    },\n    methods:{\n        transformTextToUppercase(element){\n            return element.charAt(0).toUpperCase() + element.slice(1);\n        },\n        calculateSize(e){\n            let value = e / 10;\n            return value;\n        },\n        copyInfo(){\n            let textToCopy = this.info.map(element => `${element.label}: ${element.data}`).join(', ');\n            navigator.clipboard.writeText(textToCopy)\n                .then(() => {\n                    this.displayAlert = true;\n                    setTimeout(() => { \n                        this.displayAlert = false\n                    }, \"1000\");\n                })\n                .catch(err => {\n                    console.log('Error copying to Clipboard', err);\n                });\n        }\n    },\n    template: `\n        <div>\n            <i class=\"fa-solid fa-circle-xmark close\" @click=\"$emit('update:modal', false)\"></i>\n            <div class=\"container-header\">          \n                <img :src=\"pokemon.sprites.other.dream_world.front_default\" alt=\"img_pokemon\" class=\"img\">\n            </div>\n\n            <div class=\"container-info\">\n                <div v-for=\"element in info\" class=\"info-element\">\n                    <h3>{{element.label}}:</h3>\n                    <p>{{element.data}}</p>\n                </div >\n            </div>\n\n            <div class=\"footer\">\n                <button-custom :content=\"'Share to my friends'\" @click=\"copyInfo()\"></button-custom>\n                <div class=\"container-star\">\n                    <slot></slot>\n                </div>\n            </div>\n\n            <div class=\"copy-alert\" :class=\"{'animation': displayAlert, 'hidden': !displayAlert}\">\n                <i class=\"fa-regular fa-copy\"></i>\n                <p>Copied to Clipboard!</p>\n            </div>\n        \n        </div>\n    `\n};"],"mappings":"AAAA,eAAe;EACXA,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;IACHC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,KAAK;MACnBC,IAAI,EAAE,CAAC;QAAE,MAAM,EAAE,IAAI,CAACC,wBAAwB,CAAC,IAAI,CAACP,OAAO,CAACF,IAAI,CAAC;QAAE,OAAO,EAAE;MAAM,CAAC,EAAE;QAAE,MAAM,EAAE,IAAI,CAACU,aAAa,CAAC,IAAI,CAACR,OAAO,CAACS,MAAM,CAAC;QAAE,OAAO,EAAE;MAAQ,CAAC,EAAE;QAAE,MAAM,EAAE,IAAI,CAACD,aAAa,CAAC,IAAI,CAACR,OAAO,CAACU,MAAM,CAAC;QAAE,OAAO,EAAE;MAAQ,CAAC,EAAE;QAAE,MAAM,EAAE,IAAI,CAACV,OAAO,CAACW,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAK,IAAI,CAACN,wBAAwB,CAACM,CAAC,CAACZ,IAAI,CAACH,IAAI,CAAC,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE;MAAO,CAAC;IACxV,CAAC;EACL,CAAC;EACDC,OAAO,EAAC;IACJR,wBAAwBA,CAACS,OAAO,EAAC;MAC7B,OAAOA,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;IAC7D,CAAC;IACDX,aAAaA,CAACK,CAAC,EAAC;MACZ,IAAIO,KAAK,GAAGP,CAAC,GAAG,EAAE;MAClB,OAAOO,KAAK;IAChB,CAAC;IACDC,QAAQA,CAAA,EAAE;MACN,IAAIC,UAAU,GAAG,IAAI,CAAChB,IAAI,CAACM,GAAG,CAACI,OAAO,IAAI,GAAGA,OAAO,CAACO,KAAK,KAAKP,OAAO,CAACZ,IAAI,EAAE,CAAC,CAACU,IAAI,CAAC,IAAI,CAAC;MACzFU,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,UAAU,CAAC,CACpCK,IAAI,CAAC,MAAM;QACR,IAAI,CAACtB,YAAY,GAAG,IAAI;QACxBuB,UAAU,CAAC,MAAM;UACb,IAAI,CAACvB,YAAY,GAAG,KAAK;QAC7B,CAAC,EAAE,MAAM,CAAC;MACd,CAAC,CAAC,CACDwB,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD,CAAC,CAAC;IACV;EACJ,CAAC;EACDG,QAAQ,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}